---
description: This rule helps for making markdown documents.
globs: 
alwaysApply: false
---
# AIドキュメンテーション作成ガイドライン

Documentation Rules

## 1. 目的と姿勢

- **読者中心**: 読者が最短で目的を達成できる情報構造を設計する。
- **正確性・再現性**: コード例・手順は動作確認済みのものを記載し、バージョンや前提を必ず明示する。
- **一貫性**: 用語・フォーマット・呼称をドキュメント全体で統一する。

## 2. ファイル・構成規則

| レベル | ファイル             | 役割                                     |
| ------ | -------------------- | ---------------------------------------- |
| 0      | `README.md`          | プロジェクト全体の概要・クイックスタート |
| 1      | `docs/` 下の各 `.md` | 機能別・トピック別の詳細解説             |
| 2      | `tutorials/`         | Walk-through 形式の手順書                |

> [!NOTE]
> 章立ては **「背景 → 準備 → 手順 → 補足」** の順が基本。

## 3. Markdown 記法の原則 (GFM 準拠)

1. **見出し階層**
   - `#` から `###` までを推奨。
   - レベル飛びは禁止。
2. **コードブロック**
   ````ts
   ```typescript
   const hello = "world";
   ````

```

```

- 言語指定を必ず行い、コピー＆ペーストで即実行可能にする。

3. **テーブル** は列幅をそろえ、ヘッダ行を必須とする。
4. **チェックリスト** はタスク管理や動作確認の手順で活用する。

```markdown
- [x] ビルド
- [ ] テスト
- [ ] デプロイ
```

5. **相対リンク** を優先し、外部リンクはリンク切れ監視を自動化する。

## 4. Admonition／Callouts の活用ルール

GitHub は \[GFM Callouts] 機能により、引用ブロックを拡張して **NOTE / TIP / IMPORTANT / WARNING / CAUTION** などの強調ボックス (Admonition) を表示できる。

### 4.1 最小構文

```markdown
> [!TIP]
> コマンド実行前に `--dry-run` を付けると安全です。
```

### 4.2 使用指針

| 種類      | 用途                   | 頻度              |
| --------- | ---------------------- | ----------------- |
| NOTE      | 補足・派生情報         | ◎ 高              |
| TIP       | ベストプラクティス     | ○ 中              |
| IMPORTANT | 必須設定・代替不可     | ○ 中              |
| WARNING   | データ損失など重大注意 | ▲ 低 (必要時のみ) |
| CAUTION   | 危険操作・セキュリティ | ▲ 低 (必要時のみ) |

> \[!CAUTION]
> **過剰使用は可読性を損なう。**
> ページあたり 3〜5 個を上限の目安とする。

## 5. 執筆スタイルガイド

- **日本語の場合**: 体言止め主体で簡潔に。英語の場合は命令形を基本とする。
- **箇条書き**: 1 項目が 2 行を超える場合はサブリストに分割。
- **受動態禁止**: _“It should be done”_ → _“Do this”_。
- **図・画像**: 代替テキスト (alt) を必ず付与。

## 6. コード／CLI の書き方

| 項目         | ルール                                                |
| ------------ | ----------------------------------------------------- |
| **言語タグ** | ` ```bash`, ` ```python` などでシンタックスハイライト |
| **行番号**   | 不要。コピーしやすさを優先                            |
| **可変値**   | `<PLACEHOLDER>` で括るか、環境変数を利用              |

```bash
$ export PROJECT_ID=<YOUR_PROJECT_ID>
$ pnpm run build
```

## 7. 自動生成後の品質チェック (AI システム側)

1. **Linting**: Markdown linter & spell-checker を自動実行。
2. **リンク検証**: 内部・外部リンク切れを CI で検知。
3. **コード実行テスト**: notebook／snippet 単位でセル実行テスト。
4. **アクセシビリティ**: 画像・テーブルの alt／caption をチェック。

> \[!IMPORTANT]
> ドキュメント CI が **red** のままマージを禁止。

## 8. 更新ポリシー

- **軽微な修正** (誤字・リンク更新) は `docs:` prefix で即時コミット。
- **内容追加／大幅改訂** は Pull Request を作成しレビューを必須とする。
- **破壊的変更** の場合は `CHANGELOG.md` に明示。

## Appendix A — GFM 機能チートシート

| GFM 機能     | サンプル                | 用途           |
| ------------ | ----------------------- | -------------- |
| タスクリスト | `- [ ] item`            | 手順のチェック |
| ハイライト   | <code>`code`</code>     | コード引用     |
| 自動リンク   | `<https://example.com>` | URL 表示簡便化 |
| 絵文字       | `:sparkles:`            | 感情・状態明示 |
